<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>


  <groupId>com.github.augenzu</groupId>
  <artifactId>appliances</artifactId>
  <packaging>jar</packaging>
  <version>1.0-SNAPSHOT</version>

  <name>Appliances Online Store</name>

	<url>https://github.com/augenzu/web-prac-cmc-2021</url>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<id>augenzu</id>
			<name>Aleksandra Stukova</name>
			<email>elfokd@gmail.com</email>
		</developer>
	</developers>


  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.4.3</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>


  <properties>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <java.version>1.8</java.version>
		<maven.compiler.source>8</maven.compiler.source>
  	<maven.compiler.target>8</maven.compiler.target>

		<maven.version>3.6.3</maven.version>

	  <sql-maven-plugin.version>1.5</sql-maven-plugin.version>
  	<postgresql.version>42.2.19</postgresql.version>

    <postgresql.driver>org.postgresql.Driver</postgresql.driver>
    <postgresql.host>localhost</postgresql.host>
    <postgresql.port>5432</postgresql.port>
    <postgresql.database.postgres>postgres</postgresql.database.postgres>
    <postgresql.database.appliances>appliances</postgresql.database.appliances>
    <postgresql.username>admin</postgresql.username>
    <postgresql.password>admin</postgresql.password>

    <project.db.dir>${project.basedir}/db</project.db.dir>
    <create-db.script>${project.db.dir}/create-db.sql</create-db.script>
    <create-tables.script>${project.db.dir}/create-tables.sql</create-tables.script>
    <populate-db.script>${project.db.dir}/populate-db.sql</populate-db.script>
    <drop-db.script>${project.db.dir}/drop-db.sql</drop-db.script>

    <hibernate-entitymanager.version>5.4.29.Final</hibernate-entitymanager.version>
    <hibernate-core.version>5.4.29.Final</hibernate-core.version>
    <hibernate-annotations.version>3.5.6-Final</hibernate-annotations.version>

    <maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>
    <junit5.version>5.8.0-M1</junit5.version>
    <jacoco-maven-plugin.version>0.8.6</jacoco-maven-plugin.version>
    <!-- exclude this package classes from codecov report -->
    <backend.entity.dir>backend/entity</backend.entity.dir>

    <maven-glassfish-plugin.version>2.1</maven-glassfish-plugin.version>

  </properties>


  <build>
    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
        <executions>
          <execution>
            <id>test-compile</id>
            <phase>process-test-sources</phase>
            <goals>
              <goal>testCompile</goal>
            </goals>
            <configuration>
              <source>1.8</source>
              <target>1.8</target>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>sql-maven-plugin</artifactId>
        <version>${sql-maven-plugin.version}</version>
        <dependencies>
          <dependency>
         		<groupId>org.postgresql</groupId>
          	<artifactId>postgresql</artifactId>
            <version>${postgresql.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <driver>${postgresql.driver}</driver>
          <username>${postgresql.username}</username>
          <password>${postgresql.password}</password>
        </configuration>
        <executions>
          <execution>
            <id>drop-db</id>
            <phase>process-resources</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <autocommit>true</autocommit>
              <url>
                jdbc:postgresql://${postgresql.host}:${postgresql.port}/${postgresql.database.postgres}
              </url>
              <srcFiles>
                <srcFile>${drop-db.script}</srcFile>
              </srcFiles>
            </configuration>
          </execution>
          <execution>
            <id>create-db</id>
            <phase>process-resources</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
							<autocommit>true</autocommit>
              <url>
                jdbc:postgresql://${postgresql.host}:${postgresql.port}/${postgresql.database.postgres}
              </url>
              <srcFiles>
                <srcFile>${create-db.script}</srcFile>
              </srcFiles>
            </configuration>
          </execution>
          <execution>
            <id>create-tables</id>
            <phase>process-resources</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <url>
                jdbc:postgresql://${postgresql.host}:${postgresql.port}/${postgresql.database.appliances}
              </url>
              <srcFiles>
                <srcFile>${create-tables.script}</srcFile>
              </srcFiles>
            </configuration>
          </execution>
          <execution>
            <id>populate-db</id>
            <phase>process-resources</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <url>
                jdbc:postgresql://${postgresql.host}:${postgresql.port}/${postgresql.database.appliances}
              </url>
              <srcFiles>
                <srcFile>${populate-db.script}</srcFile>
              </srcFiles>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
      </plugin>

      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco-maven-plugin.version}</version>
        <configuration>
          <excludes>
            <exclude>**/${backend.entity.dir}/*.class</exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <id>prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- <plugin>
        <groupId>org.glassfish.maven.plugin</groupId>
        <artifactId>maven-glassfish-plugin</artifactId>
        <version>${maven-glassfish-plugin.version}</version>
        <configuration>
          <glassfishDirectory>
            /home/alex000/glassfish5/glassfish
          </glassfishDirectory>
          <user>admin</user>
          <adminPassword>admin</adminPassword>
          <domain>
              <name>domain1</name>
              <httpPort>8080</httpPort>
              <adminPort>4848</adminPort>
          </domain>
          <components>
            <component>
              <name>appliances</name>
              <artifact>target/appliances-1.0-SNAPSHOT.jar</artifact>
            </component>
          </components>
          <debug>true</debug>
          <terse>false</terse>
          <echo>true</echo>
        </configuration>
      </plugin> -->

    </plugins>
  </build>


  <dependencies>
    
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>${postgresql.version}</version>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
      <version>${hibernate-entitymanager.version}</version>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <version>${hibernate-core.version}</version>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-annotations</artifactId>
      <version>${hibernate-annotations.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-surefire-plugin</artifactId>
      <version>${maven-surefire-plugin.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.junit.vintage</groupId>
          <artifactId>junit-vintage-engine</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit5.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit5.version}</version>
      <scope>test</scope>
  </dependency>

  <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-thymeleaf</artifactId>
  </dependency>

  </dependencies>


</project>